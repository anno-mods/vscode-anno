{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Anno Modding Tools","text":"<ul> <li>Get Started with the plugin.</li> <li>Report an Issue or make feature requests.</li> </ul>"},{"location":"#features","title":"Features","text":""},{"location":"#navigation-and-intellisense","title":"Navigation and IntelliSense","text":"<ul> <li>Outline: Navigate with Anno-specific outlines. Secondary Side Bar or <code>Ctrl+Shift+O</code></li> <li>Annotations: Inline asset name display next to GUIDs</li> <li>Definitions: Jump to asset (vanilla or modded). <code>Ctrl+T</code> &gt; type name; or right click on GUID &gt; <code>Go to Definition</code></li> <li>Name to GUID conversion and auto GUID counter. <code>Ctrl+Space</code></li> <li>XML auto completion (only Anno 1800)</li> </ul>"},{"location":"#syntax-and-error-checking","title":"Syntax and Error Checking","text":"<ul> <li>Modinfo.json syntax analysis</li> <li>XML syntax analysis using Red Hat XML (only Anno 1800)</li> <li>Live patch error and performance analysis</li> <li>Missing filename check</li> </ul>"},{"location":"#utilities","title":"Utilities","text":"<ul> <li>Templates: Create empty mod from templates. <code>F1</code> or right click folder in explorer &gt; <code>Anno: Create Mod from Template</code></li> <li>Show Diff: Compare original and patched result. Right click in text editor or explorer &gt; <code>Show Diff</code></li> <li>Deploy Mod: Copy to <code>mods/</code> folder and generate DDS (with LODs) and other files automatically.Status Bar &gt; click on <code>Anno 1800/117: ModID</code> button</li> </ul>"},{"location":"#model-and-texture-utilities","title":"Model and Texture Utilities","text":"<ul> <li>Convert to and from Anno specific file formats (DDS &lt;&gt; PNG, RDM &lt;&gt; glTF, ...).Right click in explorer &gt; <code>Anno: Convert to ...</code></li> <li>Import from Blender glTF to <code>.cfg</code>, <code>.ifo</code> and <code>.cf7</code>.Right click in explorer &gt; <code>Anno: Import from ...</code></li> <li>Reskin existing models without touching <code>.cfg</code>, ... (only Anno 1800)</li> </ul>"},{"location":"get-started/","title":"Get Started","text":""},{"location":"get-started/#how-to-get","title":"How to Get","text":"<ol> <li>Install Visual Studio Code.</li> <li>Install the Anno Modding Tools plugin.</li> </ol>"},{"location":"get-started/#how-to-open-files","title":"How to Open Files","text":"<p>Most features only activate if you a open folder (e.g. <code>File</code> &gt; <code>Open Folder...</code>) that includes one or more full mods (detected by <code>modinfo.json</code>).</p> <p>You can also work with parent folders, or your complete <code>mods/</code> folder.</p> The plugin will prompt you to select your game path. <p>You can adjust that manually. Go to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p> <p> - <code>Anno.*: Game Path</code>: path to your Anno installation (1) </p> <ol> <li>For example <code>C:\\Program Files (x86)\\Ubisoft\\Ubisoft Game Launcher\\games\\Anno 117 - Pax Romana</code>.</li> </ol> <p>See also the Setup page for detailed documentation.</p>"},{"location":"get-started/#learn-to-mod","title":"Learn to Mod","text":"<p>Check these resources to learn how to mod:</p> <ul> <li>Modloader Reference</li> <li>Community Modding Guide</li> </ul> Create Mod from Template <p>Press F1 and run <code>Anno: Create Mod from Template</code> to generate a template with common files.</p>"},{"location":"setup/","title":"Detailed Setup","text":""},{"location":"setup/#configure-path","title":"Configure Path","text":"<p>Go into <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p>"},{"location":"setup/#anno-117","title":"Anno 117","text":"<ul> <li><code>Anno.117: Game Path</code>: Path to your Anno installation.</li> </ul> <p>This can be either your normal game installation, with 'bin\\win64\\Anno117.exe'.</p> <p>E.g. 'C:\\Program Files (x86)\\Ubisoft\\Ubisoft Game Launcher\\games\\Anno 117'.</p> <p>Alternatively, it can be where you extracted all RDA files using the RDAExplorer.</p> <p>E.g. <code>c:\\anno\\all-rda</code> if you have   <code>c:\\anno\\all-rda\\data\\base\\config\\export\\assets.xml</code> in that location.</p> <ul> <li><code>Anno.117: Mods Folder</code>: Path to your <code>mods/</code> folder to deploy and resolve dependencies.</li> </ul> <p>Defaults to '&lt;Game Path&gt;/mods/'.</p>"},{"location":"setup/#anno-1800","title":"Anno 1800","text":"<ul> <li><code>Anno: Rda Folder</code>: Path to your extracted RDA data.</li> </ul> <p>Set it to where you extracted all RDA files using the RDAExplorer.</p> <p>E.g. <code>c:\\anno\\all-rda</code> if you have   <code>c:\\anno\\all-rda\\data\\config\\export\\main\\asset\\assets.xml</code> in that location.</p> <ul> <li><code>Anno: Mods Folder</code>: Path to your <code>mods/</code> folder to deploy and resolve dependencies.</li> </ul>"},{"location":"setup/#syntax-check-and-auto-complete","title":"Syntax Check and Auto Complete","text":"<p>The below features are set up for you by default, unless you change their settings.</p> <p>You can change a setting by going to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and then search for the settings key.</p>"},{"location":"setup/#modinfojson-schema","title":"Modinfo.json Schema","text":"<p>The modinfo.json schema enables auto complete and syntax check.</p> <p>It is automatically added your workspace settings file <code>.vscode/settings.json</code>, unless you deactivate it under <code>anno.workspace.setModinfoSchema</code>.</p> <p>By default, it has the following content:</p> <pre><code>\"json.schemas\": [\n  {\n    \"fileMatch\": [\n      \"/modinfo.json\"\n    ],\n    \"url\": \"https://raw.githubusercontent.com/anno-mods/vscode-anno/main/languages/modinfo-schema.json\"\n  }\n]\n</code></pre>"},{"location":"setup/#xml-patch-schema","title":"XML Patch Schema","text":"<p>The XML patch schema enables partial auto complete and syntax check for XML ModOp patches.</p> <p>It is automatically added your workspace settings file <code>.vscode/settings.json</code>, unless you deactivate it under <code>anno.workspace.setXmlSchema</code>.</p> <p>By default, it has the following content:</p> <pre><code>\"xml.fileAssociations\": [\n  {\n    \"pattern\": \"{assets*,*.include}.xml\",\n    \"systemId\": \"https://raw.githubusercontent.com/anno-mods/vscode-anno/main/generated/assets.xsd\"\n  }\n]\n</code></pre> <p>You need to install the XML Language Support by Red Hat extension.</p> <p>Note: If you want to force updates for auto-completion delete 'C:\\Users\\\\.lemminx' and re-open VSCode."},{"location":"setup/#recommended-plugins","title":"Recommended Plugins","text":""},{"location":"setup/#xml","title":"XML","text":"<p>In Anno 1800 mode, auto completion and other XML features work only in combination with a plugin that supports XSD validation.</p> <p>XML Language Support by Red Hat</p>"},{"location":"setup/#gltf-tools","title":"glTF Tools","text":"<p>There's a plugin that can preview glTF models which can be useful if you work with the glTF based Blender import/export tools.</p> <p>glTF Tools</p>"},{"location":"editing/analysis/","title":"Syntax and Error Checking","text":"Requires game path configuration. <p>Go to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p> <p>   - <code>Anno.*: Game Path</code>: path to your Anno installation (1)   </p> <ol> <li>For example <code>C:\\Program Files (x86)\\Ubisoft\\Ubisoft Game Launcher\\games\\Anno 117 - Pax Romana</code>.</li> </ol> <p>See also the Setup page for detailed documentation.</p> <p></p>"},{"location":"editing/analysis/#guid-annotation","title":"GUID Annotation","text":"<p>Displays name and template name of GUIDs.</p> <p>This feature will also consider Mod GUIDs, if they are either: - part of your own mod - part of a dependency mentioned in <code>modinfo.json</code> and installed into the game's <code>mods/</code> folder</p>"},{"location":"editing/analysis/#live-analysis","title":"Live Analysis","text":"<p>The live analysis applies your mod on save to the game and provides error and performance information.</p>"},{"location":"editing/analysis/#syntax-check","title":"Syntax Check","text":"<p>The plugin will scan you asset files for common problems like the use of outdated pools (e.g. <code>190611</code>). The file must match the naming scheme <code>assets*.xml</code> to be considered.</p>"},{"location":"editing/analysis/#show-diff","title":"Show Diff","text":"<p>You can check th results of one or more <code>ModOp</code>s by selecting them and then right click &gt; <code>Anno: Compare Results with Vanilla</code>.</p> <p>Alternatively, you can compare full files and mods by right clicking on <code>assets.xml</code>, <code>templates.xml</code> and <code>*.include.xml</code>.</p>"},{"location":"editing/auto-complete/","title":"Auto Complete","text":"Requires game path configuration. <p>Go to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p> <p>   - <code>Anno.*: Game Path</code>: path to your Anno installation (1)   </p> <ol> <li>For example <code>C:\\Program Files (x86)\\Ubisoft\\Ubisoft Game Launcher\\games\\Anno 117 - Pax Romana</code>.</li> </ol> <p>See also the Setup page for detailed documentation.</p>"},{"location":"editing/auto-complete/#guid-conversion","title":"GUID Conversion","text":"<p>You get a list of possible GUID matches to replace to. The list is shown automatically in XML tags that expect a GUID, or after typing <code>GUID=\"</code> in ModOps.</p> <p>Otherwise, trigger the list manually with <code>Ctrl</code> + <code>Space</code>.</p> <p>Not all GUIDs can be converted automatically due to performance. Most notable exclusions are <code>Test</code> and <code>Audio</code>.</p>"},{"location":"editing/auto-complete/#auto-completion","title":"Auto Completion","text":"<p>Now your code gets validated and you can press <code>Ctrl</code> + <code>Space</code> anywhere in the document and get a list of possible tags, enums or GUIDs.</p> <p>If you want to force updates for auto-completion delete <code>C:\\Users\\&lt;user&gt;\\.lemminx</code> and re-open VSCode.</p>"},{"location":"editing/navigation/","title":"Navigation","text":""},{"location":"editing/navigation/#jump-to-asset","title":"Jump to Asset","text":"<p>Right click on any GUID and select <code>Go to Definition</code> or press F12 to jump to the related mod or vanilla asset.</p> <p>The plugin searches in the following locations for assets:</p> <ul> <li>Vanilla assets (1)</li> <li>Current mod</li> <li>Dependencies found in the workspace or in the mods folder (2)</li> <li>Any XML patch opened once during current session</li> </ul> <ol> <li> <p>Requires game path configuration.</p> <p>Go to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p> <p>   - <code>Anno.*: Game Path</code>: path to your Anno installation (1)   </p> <ol> <li>For example <code>C:\\Program Files (x86)\\Ubisoft\\Ubisoft Game Launcher\\games\\Anno 117 - Pax Romana</code>.</li> </ol> <p>See also the Setup page for detailed documentation.</p> </li> <li> <p>Requires mods folder configuration.</p> <p>Go to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p> <p> - <code>Anno.*: Mods Folder</code>: path to your <code>mods/</code> folder to deploy and resolve dependencies (1) </p> <ol> <li>Defaults to <code>&lt;Game Path&gt;/mods/</code>.</li> </ol> <p>See also the Setup page for detailed documentation.</p> </li> </ol> <p>Press Ctrl + T to search and quickly jump to an asset.</p>"},{"location":"editing/navigation/#outline","title":"Outline","text":"<p>The plugin has custom outlines for ModOp patches and CFG &amp; IFO files.</p> <p>Clicking on an outline entry navigates the cursor to the according position in the document.</p> <p>Open Outline</p> <p>Press Ctrl +  Alt + B and go to the tab <code>Outline</code>.</p> <p>Or alternatively, Ctrl + Shift + O to just jump to a section.</p>"},{"location":"editing/navigation/#naming-sections","title":"Naming Sections","text":"CodeResult <pre><code>&lt;ModOps&gt;\n  &lt;!-- # Section 1 --&gt;\n  &lt;Group /&gt;\n  &lt;ModOp Type=\"Add\"/&gt;\n\n  &lt;!-- # Section 2 --&gt;\n  &lt;ModOp Type=\"Remove\"/&gt;\n&lt;/ModOps&gt;\n</code></pre>"},{"location":"editing/navigation/#naming-groups","title":"Naming Groups","text":"CodeResult <pre><code>&lt;ModOps&gt;\n  &lt;Group /&gt;\n\n  &lt;!-- This group has a name --&gt;\n  &lt;Group /&gt;\n&lt;/ModOp&gt;\n</code></pre>"},{"location":"editing/templates/","title":"Templates","text":"<p>You can create mods from templates with a structure of common mod files:</p> <ul> <li>either globally with <code>F1</code> &gt; <code>Anno: Create Mod from Template</code>,</li> <li>or at a specific location by right clicking on a folder in the Explorer view &gt; <code>Anno: Create Mod from Template</code></li> </ul> <p>The command creates a folder with the Mod ID (asked by input box) and the following files in their correct path:</p> <ul> <li>modinfo.json with mandatory entries</li> <li>README.md</li> <li>assets.xml</li> <li>texts_english.xml</li> <li>common folders</li> </ul>"},{"location":"tools/blender-import/","title":"Import from Blender or glTF","text":"<p>It's recommended to use the Blender plugin instead.</p> <p>The import functionality predates the Blender plugin. Use that instead:</p> <ul> <li>Blender Plugin for Anno 117</li> <li>Blender Plugin for Anno 1800</li> </ul> <p>Steps:</p> <ol> <li>Follow naming conventions below</li> <li>Export to glTF</li> <li>Right-click on target <code>.cfg</code> and select <code>Import from glTF</code>.</li> </ol> <p>Import an glTF file from one of the below examples into Blender to see how a project should look like:</p> <ul> <li>Town Hall Buildings (multiple models in one .cfg)</li> <li>Small Power Plants (with animations)</li> </ul> <p>\u26a0 Make sure to not edit the mesh of the objects, but the object position, scale and rotation only.</p> <p>CFG file imports:</p> <ul> <li><code>PROP</code>s with prefix <code>prop_</code> (e.g. boxes, barrels)</li> <li>Position, Rotation, Scale</li> <li>mesh name as <code>FileName</code> if it ends with <code>.prp</code>.     Don't worry about Blender-style <code>.001</code>, <code>.002</code>, ... endings. They will be ignored.</li> <li>Will be added if they don't exist.</li> <li><code>PARTICLE</code>s with prefix <code>particle_</code> (e.g. smoke)</li> <li>Position, Rotation, Scale</li> <li><code>FILE</code>s with prefix <code>file_</code> (included external cfg files)</li> <li>Position, Rotation, Scale</li> <li>mesh name as <code>FileName</code> if it ends with <code>.cfg</code>.</li> <li>Will be added if they don't exist.</li> <li><code>DECAL</code> with name <code>ground</code> (ground texture)</li> <li>Extents is calculated from all vertices of that object (e.g. plane).     This modifies the ground texture. The building tile size is <code>&lt;BuildBlocker&gt;</code> in the IFO file.</li> </ul> <p>Entries not existing in the model will be marked as <code>_removed</code> and not removed automatically.</p> <p>CF7 file imports:</p> <ul> <li><code>&lt;Dummies&gt;&lt;i&gt;</code>: people, FireDummy, feedback_door, ...</li> <li>Imported from multiple objects with prefix <code>fc_</code>.</li> <li><code>Position</code> and <code>Orientation</code> are taken from the object.     <code>RotationY</code> is calculated from the orientation.</li> <li><code>&lt;Name&gt;</code> of the entry will be matched against what comes after <code>fc_</code>.     E.g. <code>fc_Dummy0</code> will be matched against <code>&lt;Name&gt;Dummy0&lt;/Name&gt;</code>.</li> <li>Entries not existing in the model will not be removed.</li> </ul> <p>IFO file imports:</p> <ul> <li><code>&lt;IntersectBox&gt;</code>: clickable 3D area (aka hitbox) of the building</li> <li>Imported from multiple mesh object (e.g. cube) with prefix <code>hitbox</code></li> <li><code>Position</code>, <code>Rotation</code> and <code>Extents</code> are calculated from the boundaries of the objects.     1 box per object.</li> <li><code>&lt;Dummy&gt;</code>: transporter spawn, fire locations, ...</li> <li>Imported from multiple objects with prefix <code>dummy_</code>.</li> <li><code>Position</code>, <code>Rotation</code> and <code>Extents</code> are taken from the object.</li> <li><code>&lt;Name&gt;</code> of the entry will be matched against what comes after <code>dummy_</code>.     E.g. <code>dummy_transporter_spawn</code> will be matched against <code>&lt;Name&gt;transporter_spawn&lt;/Name&gt;</code>.</li> <li>Entries not existing in the model will not be removed.</li> <li><code>&lt;FeedbackBlocker&gt;</code>: area people can walk through</li> <li>Imported from multiple mesh objects (e.g. plane) with prefix <code>FeedbackBlocker</code></li> <li><code>Position</code>s are taken from mesh vertices.     Rounded to .25</li> <li><code>&lt;BuildBlocker&gt;</code>: tile size of the building</li> <li>Imported from one mesh object (e.g. plane) with name <code>ground</code></li> <li><code>Position</code>s are taken from mesh vertices.     Rounded to .5</li> <li><code>&lt;UnevenBlocker&gt;</code>: area to always keep above ground</li> <li>Imported from one mesh object (e.g. plane) with name <code>UnevenBlocker</code></li> <li><code>Position</code>s are taken from mesh vertices.     Rounded up in .25 steps</li> </ul>"},{"location":"tools/deploy/","title":"Deploy Mods","text":"Requires mods folder configuration. <p>Go to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p> <p> - <code>Anno.*: Mods Folder</code>: path to your <code>mods/</code> folder to deploy and resolve dependencies (1) </p> <ol> <li>Defaults to <code>&lt;Game Path&gt;/mods/</code>.</li> </ol> <p>See also the Setup page for detailed documentation.</p> <p>Automatically convert and copy mod files using a json description.</p> <ul> <li>automatically convert files like <code>.png</code> or <code>.gltf</code> to their Anno formats</li> <li>copy only wanted files into a separate mod folder (keeps mod output clean)</li> <li>create skins of <code>.cfg</code> files without duplicating them</li> </ul>"},{"location":"tools/deploy/#how-to-call","title":"How to call","text":""},{"location":"tools/deploy/#from-visual-studio-code","title":"From Visual Studio Code","text":"<ul> <li>The status bar shows a button with Anno version and mod ID.   Click that to deploy the mod to your configured <code>mods/</code> folder.</li> <li>Alternatively, press F1 to select a mod from your workspace.</li> </ul>"},{"location":"tools/deploy/#from-terminal-or-github-actions","title":"From Terminal or GitHub actions","text":"<p>You can use the build command also in command line.</p> <p>Have a look at New World Cities' GitHub publish pipeline to get some hints how to do it.</p>"},{"location":"tools/deploy/#download-sub-mods","title":"Download Sub-Mods","text":"<p>You can automatically bundle sub-mods and shared files using URLs in <code>ModDependencies</code> and <code>Development.Bundle</code>. For example:</p>  117 1800 modinfo.json<pre><code>{\n  // ..\n  \"Dependencies\": {\n    \"Require\": [\n      \"https://github.com/anno-mods/shared-resources/releases/download/v10.10/shared-pools-and-definitions.zip\"\n    ],\n  },\n  \"Development\": {\n    \"Bundle\": [\n      \"https://github.com/anno-mods/shared-jakob/releases/download/v4.9.4/decals-city-jakob.zip\",\n      \"https://github.com/anno-mods/shared-jakob/releases/download/v4.9.4/decals-industry-jakob.zip\"\n    ]\n  }\n}\n</code></pre> modinfo.json<pre><code>{\n  // ..\n  \"ModDependencies\": [\n    \"https://github.com/anno-mods/shared-resources/releases/download/v10.10/shared-pools-and-definitions.zip\"\n  ],\n  \"Development\": {\n    \"Bundle\": [\n      \"https://github.com/anno-mods/shared-jakob/releases/download/v4.9.4/decals-city-jakob.zip\",\n      \"https://github.com/anno-mods/shared-jakob/releases/download/v4.9.4/decals-industry-jakob.zip\"\n    ]\n  }\n}\n</code></pre> <p>Both options download the file and extract the content into your mod.</p> <p><code>Development.Bundle</code> does not add a dependency.</p> <p>URLs in <code>ModDependencies</code> are a shotcut for the following where the URL is bundled and the zip file name is used as a dependency:</p>  117 1800 modinfo.json<pre><code>{\n  // ..\n  \"Dependencies\": {\n    \"Require\": [\n      \"shared-pools-and-definitions\"\n    ],\n  },\n  \"Development\": {\n    \"Bundle\": [\n      \"https://github.com/anno-mods/shared-resources/releases/download/v10.10/shared-pools-and-definitions.zip\"\n    ]\n  }\n}\n</code></pre> modinfo.json<pre><code>{\n  // ..\n  \"ModDependencies\": [\n    \"shared-pools-and-definitions\"\n  ],\n  \"Development\": {\n    \"Bundle\": [\n      \"https://github.com/anno-mods/shared-resources/releases/download/v10.10/shared-pools-and-definitions.zip\"\n    ]\n  }\n}\n</code></pre>"},{"location":"tools/deploy/#change-output-path","title":"Change Output Path","text":"<p>The default folder name is <code>[Category] Name</code>, saved to your <code>mods/</code> folder.</p> <p>You can change that in the <code>modinfo.json</code>:</p> <pre><code>{\n  // ... the usual modinfocontent\n  \"Development\": {\n    \"DeployPath\": \"${annoMods}/${modName}\"\n  }\n}\n</code></pre> <p>Use <code>${modName}</code> to get <code>[Category] Name</code> created from <code>modinfo.Category.English</code> and <code>modinfo.ModName.English</code>.</p> <p>Use <code>${annoMods}</code> to get your local Anno <code>mods/</code> directory set in the Extension configuration.</p>"},{"location":"tools/deploy/#conversions","title":"Conversions","text":"<p>The following are the default conversion if you use a normal <code>modinfo.json</code> file:</p> Type Pattern Action Texture <code>_diff.png</code>, <code>_metal.png</code>, <code>_norm.png</code>, <code>_height.png</code>, <code>_rga.png</code> Create DDS textures with 3 LODs. Icon <code>icon*.png</code> Copy PNG and create DDS textures LODs as needed. Feedback <code>.cf7</code> Convert to <code>.fc</code>. Models <code>.gltf</code> Extract and convert models with the name <code>_lod0</code> etc. to individual <code>.rdm</code> files. Skin <code>.cfg.yaml</code> Generate <code>.cfg</code>, <code>.ifo</code>, <code>.fc</code>. Other <code>.cfg</code>, <code>.ifo</code>, <code>.prp</code>, <code>.fc</code>, <code>.rdm</code>, <code>.dds</code>, <code>.rdp</code>, <code>.fx</code> Copy. Config <code>data/config/*</code> Copy. Readme <code>README.md</code> Insert text into <code>Description.English</code> in the modinfo.json. Banner <code>banner.png</code>, <code>banner.jpg</code> Copy."},{"location":"tools/reskin/","title":"Quickly Reskin Existing Models","text":"Requires game path configuration. <p>Go to <code>File</code> &gt; <code>Preferences</code> &gt; <code>Settings</code> and search for <code>anno</code> to configure the following:</p> <p>   - <code>Anno.*: Game Path</code>: path to your Anno installation (1)   </p> <ol> <li>For example <code>C:\\Program Files (x86)\\Ubisoft\\Ubisoft Game Launcher\\games\\Anno 117 - Pax Romana</code>.</li> </ol> <p>See also the Setup page for detailed documentation.</p> <p>Write a yaml file like below and name it <code>.cfg.yaml</code>. IFO, FC/CF7 and CFG files will be generated accordingly. Files are copied if they have the same name as the source. Modifications are currently only supported in IFO and CFG files.</p> <p>If you have <code>townhall.cfg</code>, <code>townhall.cf7</code> and <code>townhall.ifo</code>, then a <code>townhall_1.cfg.yaml</code> leads to generated <code>townhall_1.cfg</code>, <code>townhall_1.fc</code> and <code>townhall_1.ifo</code>.</p> <p>Examples: Town Hall Buildings</p> <pre><code>variant:\n  source: townhall.cfg\n  modifications:\n    - xpath: //Config/Models/Config/Materials/Config[Name=\"building\"]\n      cModelDiffTex: data/jakob/buildings/townhall/maps/townhall_bluish_diff.psd\n    - xpath: //Config/Models/Config[Name=\"top\"]\n      FileName: data/jakob/buildings/townhall/rdm/townhall_2_lod0.rdm\n    # disable smoke\n    - xpath-remove: //Config/Particles/Config[Name=\"particle_smoke1\"]\n    # move flag 1\n    - xpath: //Config/Files/Config[Name=\"file_flag1\"]/Transformer/Config\n      Position.y: 6.97816\n  ifo:\n    # adjust hitbox to new height\n    - xpath: //Info/IntersectBox[Name=\"Hitbox2\"]\n      Position:\n        yf: 4.34346\n</code></pre>"}]}